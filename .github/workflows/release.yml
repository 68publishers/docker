name: Release images

on:
  workflow_dispatch:
    inputs:
      language:
        description: 'The language (e.g. "php")'
        required: true
      type:
        description: 'Image type (e.g. "8.1-unit")'
        required: true
      version:
        description: 'The version in semver format (e.g. "1.2.3")'
        required: true

jobs:
  configure:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout to repository
        uses: actions/checkout@v3

      - name: Set matrix data
        id: set-matrix
        run: echo "matrix=$(jq -c . < ./${{ github.event.inputs.language }}/${{ github.event.inputs.type }}/matrix.json)" >> $GITHUB_OUTPUT

  release:
    runs-on: ubuntu-latest
    needs: configure
    strategy:
      matrix: ${{ fromJson(needs.configure.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Git configuration
        run: |
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions"

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ matrix.image }}
          flavor: |
            latest=false
          tags: |
            type=ref,event=pr
            type=semver,pattern=${{ github.event.inputs.type }}-${{ matrix.name }}-{{version}},value=${{ github.event.inputs.version }}
            type=semver,pattern=${{ github.event.inputs.type }}-${{ matrix.name }}-{{major}}.{{minor}},value=${{ github.event.inputs.version }}
            type=semver,pattern=${{ github.event.inputs.type }}-${{ matrix.name }}-{{major}},value=${{ github.event.inputs.version }}
            type=raw,value=${{ github.event.inputs.type }}-${{ matrix.name }}-latest,enable={{is_default_branch}}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          file: ./${{ github.event.inputs.language }}/${{ github.event.inputs.type }}/Dockerfile
          target: ${{ matrix.target }}
          push: true
          platforms: linux/arm/v7,linux/arm64/v8,linux/amd64
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
